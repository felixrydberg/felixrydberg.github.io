---
import { twMerge } from "tailwind-merge";

interface Props {
  string: string;
  class?: string;
  duration?: number;
  tag?: "div" | "span" | "p" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
  passive?: boolean;
  delay?: number;
}

const { string, duration = 50, tag = "div", passive = true, delay = 0 } = Astro.props;
const className = Astro.props.class || "";
const Element = tag;
---

{string.split("\n").map((row, index, arr) => {
    const delayIndex = arr.slice(0, index).reduce((acc, row) => acc + row.length, 0) + delay;
    const isLastRow = index === arr.length - 1;
    const multiRow = arr.length > 1;
    return (
      <Element
        class:list={["typing-row", {'last-row': isLastRow, 'multi-row': multiRow, passive }, twMerge("h-full whitespace-pre break-all inline-block", className)]}
        style={`--typing-delay: ${duration}ms;--delay: ${(delayIndex * duration) + duration}ms;--character-count: ${(row.length * duration) + duration}ms;`}
      >
        {/* {`--typing-delay: ${duration}ms;`} */}
        {/* {`--delay: ${delayIndex * duration}ms;`} */}
        {/* {`--character-count: ${row.length * duration}ms;`} */}
        
        {row.trim().split(" ").map((word, wordIndex, arr) => {
          const lastWordDelay = arr.slice(0, wordIndex).reduce((acc, row) => acc + row.length, 0);
          if (wordIndex !== arr.length - 1) {
            word += " ";
          }
          return <span>
            {word.split("").map((char, index) => (
              <span
                class="char-span"
                style={`--typing-delay: ${duration}ms;--delay: ${delayIndex + lastWordDelay + index}`}
              >{char}</span>
            ))}
          </span>
          // return word.split("").map((char, index) => (
          //     <span
          //       class="char-span"
          //       style={`--typing-delay: ${duration}ms;--delay: ${delayIndex + lastWordDelay + index}`}
          //     >{char}</span>
          //   ))
        })}

        <span class="caret-span"></span>
      </Element>
    )
  })}

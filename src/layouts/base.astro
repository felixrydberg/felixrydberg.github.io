---
import CommonHead from '@/components/common/head.astro';
import NavigationHeader from '@/components/navigation/header.astro';
import Container from '@/components/common/container.astro';
import Link from '@/components/ui/link.astro'

interface Props {
	title: string;
	description: string;
	image?: string;
  size?: "sm" | "md" | "lg" | "xl" | "2xl" | "full",
}

const { title, description, image, size = "lg" } = Astro.props;
const { pathname } = Astro.url;
const links = [
  {
    href: '/',
    text: 'Home'
  },
  {
    href: '/projects',
    text: 'Projects'
  },
  {
    href: '/work',
    text: 'Work'
  },
];
const subpath = pathname.match(/[^/]+/g)
---

<!doctype html>
<html lang="en" class="bg-neutral-100 dark:bg-neutral-950">
	<head>
		<CommonHead title={title} description={description} image={image} />
	</head>
	<body class="min-h-screen h-full">
		<NavigationHeader links={links} />
		<Container size={size} tag="main" class="min-h-screen h-full">
			<slot />
			<div id="navigation-drawer" class="lg:hidden rounded-r-lg fixed p-4 top-0 left-0 z-20 w-64 h-full transition-all duration-300 transform -translate-x-full bg-neutral-100 dark:bg-neutral-950 border border-neutral-200 dark:border-neutral-900 shadow-lg">
				<div class="flex flex-col justify-between h-full">
					<ul>
						{links.map((link) => 
							<li class="border-b border-neutral-200 dark:border-neutral-800">
								<Link
									class="text-neutral-700 text-center dark:text-neutral-300 my-6 text-lg tracking-wider" 
									class:list={[pathname === link.href || `/${subpath?.[0]}` === link.href ? 'bg-neutral-200 dark:bg-neutral-800' : '']}
									href={link.href}
								>
									{link.text}
								</Link>
							</li>
						)}
					</ul>
					<ul>
						<li><a class="content-email block bg-transparent hover:bg-neutral-200 dark:hover:bg-neutral-800 transition ease-in duration-100 px-3 my-1 mx-4 rounded-lg text-neutral-700 text-center dark:text-neutral-300 text-sm tracking-wider p-2"><noscript>JS is required to view email</noscript></a></li>
						<li><a class="content-number block bg-transparent hover:bg-neutral-200 dark:hover:bg-neutral-800 transition ease-in duration-100 px-3 my-1 mx-4 rounded-lg text-neutral-700 text-center dark:text-neutral-300 text-sm tracking-wider p-2"><noscript>JS is required to view number</noscript></a></li>
					</ul>
				</div>
			</div>
			<div id="search-model-container"></div>
		</Container>
		<footer class="border-t dark:border-neutral-800 h-64">
			<Container size="lg" class="flex items-center justify-between h-full text-neutral-600 dark:text-neutral-400">
				<div class="text-sm">
					<p>
						Built by <a href="https://github.com/felixrydberg" target="_blank">Felix Rydberg</a>
					</p>
					<p>Updated @ {new Date().toLocaleDateString()}</p>
				</div>
				<div>
					<p class="text-lg">Contacts</p>
					<ol class="pl-6 list-disc">
						<li><a class="content-email"><noscript>JS is required to view email</noscript></a></li>
						<li><a class="content-number"><noscript>JS is required to view number</noscript></a></li>
						<li><a href="https://github.com/felixrydberg" target="_blank">Github</a></li>
					</ol>
				</div>
			</Container>
		</footer>
		<script>
			const emails = document.querySelectorAll(".content-email");
			const numbers = document.querySelectorAll(".content-number");

			const email = "ZmVsaXhyeWRAZ21haWwuY29t";
			const number = "KzQ2NzkzMTM4MzA5";

			const nodes = [
				...[...emails].map((node) => {
					return { type: 'email', node}
				}),
				...[...numbers].map((node) => {
					return { type: 'number', node}
				})
			];
			nodes.forEach(({ type, node }) => {
				const prefix = type === 'email' ? 'mailto:' : 'tel:';
				const content = type === 'email' ? atob(email) : atob(number);
				node.setAttribute('href', `${prefix}${content}`);
				node.textContent = content;
			})
		</script>
	</body>
</html>
